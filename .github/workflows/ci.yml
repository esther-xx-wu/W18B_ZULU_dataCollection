# This workflow will lint, run tests, type check with Python 3.11,
# and promote dev branch to staging if tests pass.

name: Build and test app

on:
  push:
    branches: [ "dev" ]

jobs:
  dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest pytest-cov mypy
        pip install -r requirements.txt

    - name: Lint with Ruff
      run: ruff check --output-format=github

    - name: Check code formatting with Ruff
      run: ruff format --diff
      continue-on-error: true

    - name: Run tests and generate coverage report
      run: |
        pytest --junitxml=pytest.xml --cov-report term-missing --cov-report xml:coverage.xml --cov=src tests/

    - name: Comment on coverage report
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-xml-coverage-path: ./coverage.xml
        junitxml-path: ./pytest.xml

    - name: Upload pytest and coverage reports artifact
      uses: actions/upload-artifact@v4
      with:
        name: pytest-reports-artifact
        path: |
          ./pytest.xml
          ./coverage.xml
        if-no-files-found: error

    - name: Run type checking with mypy
      run: |
        export MYPYPATH=src
        mypy src --check-untyped-defs --disable-error-code=import-untyped
      continue-on-error: true
  
    - name: Run type checking with mypy
      run: mypy src --check-untyped-defs --disable-error-code=import-untyped
      continue-on-error: true

  promote-to-staging:
    needs: dev
    runs-on: ubuntu-latest
    if: success()
    permissions:
      contents: write
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Fetch all branches
        run: git fetch origin

      - name: Checkout staging branch
        run: git checkout staging

      - name: Merge dev into staging
        run: |
          git merge origin/dev --no-ff --no-edit

      - name: Push updated staging branch
        run: git push origin staging

  staging:
    needs: promote-to-staging
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up staging job (WIP)
        run: echo "Running staging job (will run Postman API tests when done.)"
